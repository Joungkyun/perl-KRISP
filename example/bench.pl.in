#!/usr/bin/perl -W

# $Id: bench.pl.in,v 1.2 2010-09-11 09:46:35 oops Exp $

BEGIN { unshift(@INC, "./blib/arch/auto/KRISP") }
use lib './lib';
use strict;

use KRISP;
use Data::Dumper;
use Time::HiRes qw(gettimeofday);
sub microtime{
	my $asFloat = 1;
	my $microtime;
	if(@_){
		$asFloat = shift;
	}
	(my $epochseconds, my $microseconds) = gettimeofday;
	if($asFloat){
		while(length("$microseconds") < 6){
			$microseconds = "0$microseconds";
		}
		$microtime = "$epochseconds.$microseconds";
	} else {
		$microtime = "$epochseconds $microseconds";
	}
	return $microtime;
}

sub randomip {
	my $range = 4294967295;
	my $rd = int (rand ($range));

	if ( $rd < 16777216 ) {
		$rd += 16777216;
	}

	return $rd;
}

my $db;
my $host;
my $lhost;


if ( @ARGV eq 0 or $ARGV[0] eq "-h" ) {
	printf "Usage: perl bench.pl loop_number\n";
	exit (1);
}

$db = KRISP::open ();
exit (1) if ( ! defined $db );

KRISP::set_mtime_interval ($db, 0);

my $t1 = microtime ();

my $i = 0;
while ( $i < $ARGV[0] ) {
	$lhost = randomip ();
	$host = KRISP::long2ip ($lhost);

	#KRISP::search_ex ($db, $host, 'krisp');
	KRISP::search ($db, $host);
	$i++;
	#printf "%d\n", $i;
	#last if ($i eq 4);
}

my $t2 = microtime ();

printf "Execute Time: %.2f sec\n", $t2 - $t1;

KRISP::close ($db);

exit (0);

# Local variables:
# tab-width: 4
# c-basic-offset: 4
# End:
# vim600: noet sw=4 ts=4 fdm=marker
# vim<600: noet sw=4 ts=4
